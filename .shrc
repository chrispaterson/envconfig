#!/bin/sh

alias ..="cd ../"

alias ll='ls -GlA'
alias l='ls -Gl'

# Always open files in vertical split mode
alias vi='vim -O'

alias vimrc="vim $HOME/.vimrc"

if [[ "$OSTYPE" == "linux-gnu" ]]; then

  # Linux

  # only on linux -- OSX will throw an error if I pass the --color=auto
  alias ls='ls --color=auto'

fi

#Add bin to path
export PATH="$HOME/bin:$HOME/node_bin/node_modules/.bin:$PATH"
export EDITOR="vim"

ENV_FILE=$HOME/.env

if [ -f "$ENV_FILE" ]; then

  source "$ENV_FILE"

fi

export NVM_DIR="$HOME/.nvm"
. "$(brew --prefix nvm)/nvm.sh"

export cdr() {
  repo_root=$(git rev-parse --show-toplevel)
  cd $repo_root
}

export get_rush_config() {
  rush_config_file="rush.json"

  cdr

  raw_rush_config=$(cat $rush_config_file)

  if [ -z $raw_rush_config ]; then
    echo "$rush_config_file not found!"
    cd -
    return
  fi

  clean_rush_config=$(echo $raw_rush_config | strip-json-comments)

  echo $clean_rush_config;
}

export cdp() {

  cdr

  if [ -z $1 ]; then
    echo "Please enter a package name"
    cd - > /dev/null
    return
  fi

  folder=$(get_rush_config | jq "( .projects[] | select(.packageName == \"@hz/$1\") ).projectFolder")

  if [ -z $folder ]; then
    echo "Package \"$1\" not found"
    cd - > /dev/null
    return
  fi

  folder=$(echo $folder | tr -d '"')
  folder=$(realpath $folder)

  cd - > /dev/null
  cd $folder
}

export rsearch() {
  dirs=$(get_rush_config | jq "( .projects[] | .projectFolder )" | tr -d '"')
  cdr
  while IFS= read -r dir; do
    if [ -d "$dir/src" ]; then
      grep -rl "$1" "$dir/src"
    fi
  done <<< "$dirs"
  cd - > /dev/null
}
