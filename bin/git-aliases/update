#!/bin/bash
branch=$(git branch --show-current)
from_branch="main"
maybe_origin=" "

while [[ $# -gt 0 ]]; do
    case "$1" in
      -o) maybe_origin=1; shift;;
      -u) update_local=1; shift;;
       *)
            if [[ "$1" == -* ]]; then
                echo "Error: Invalid option: $1"
                exit 1
            fi

            from_branch=$1
            shift
            ;;
    esac
done

if [[ $from_branch == $branch ]]; then
  echo "Can not merge from $from_branch to $branch because they are the same"
  exit 1
fi

if [[ $update_local -eq 1 ]]; then
  prompt="Do you want to get changes from $from_branch and also update that branch locally?"
elif [[ $maybe_origin -eq 1 ]]; then
  prompt="Do you want to get changes from origin/$from_branch and not update that branch locally?"
else
  prompt="Do you want to get changes from $from_branch?"
  git merge $from_branch --no-edit
fi

read -p "$prompt [Y/n] " reply
echo    # move to a new line

case "$reply" in 
  y|Y ) 
    echo "Ok then..."
    ;;
  n|N ) 
    echo "It's cool, we all make mistakes..."
    exit 
  ;;
  * ) if ! [[ $reply ]]; then
      echo "Ok then..."
    else
      echo "Not sure what that response was..."
      exit 
    fi
    ;;
esac

cd $(git root)
git fetch -p

if [[ $update_local -eq 1 ]]; then
  git switch $from_branch
  git pull
  git switch -
  git merge $from_branch
elif [[ $maybe_origin -eq 1 ]]; then
  git merge origin/$from_branch --no-edit
else
  git merge $from_branch --no-edit
fi


conflicts=$(git diff --name-status --diff-filter=U)

# There are no conflicts
if [[ -z "conflicts" ]]; then
  if [[ -f ./rush.json ]]; then
    pnpm_lock_file="common/config/rush/pnpm-lock.yaml"
    repo_state_file="common/config/rush/repo-state.json"
    if [[ ! -z $(git diff origin/$from_branch -- $pnpm_lock_file) || ! -z $(git diff origin/$from_branch -- $repo_state_file) ]]; then
      git checkout origin/$from_branch --  $pnpm_lock_file $repo_state_file
      ./bin/setup.sh
      git add $pnpm_lock_file $repo_state_file
    fi
  fi

  git commit --no-edit
  git clean -f .
else
  echo "Please resolve merge conflicts before committing"

fi
