#!/bin/bash

PRINT_LAST_LOGS=5
usage ()
{
  echo "Usage: $0 [-p | --print] [-h | --help] [-m | --message] <message to log>"
}

showhelp()
{
  echo "$0 - opens log file for today in VIM"
  echo " "
  usage
  echo " "
  echo "options:"
  echo "-h, --help                show brief help"
  echo "-m, --message             pass a message and do not open the editor"
  echo "-p, --print               Prints the last $PRINT_LAST_LOGS days of logs to stdout"
}

# There is no "Documents" on a
if [[ "$OSTYPE" == "linux-gnu" ]]; then

  echo "This utility only works on Mac OSX"
  exit 1

fi

DIR=~/personal_time_logs

if [ ! -d $DIR ]; then
  mkdir $DIR
fi

LOG=$DIR/$(date +'%F').md


while getopts "phm:" opt; do
  case $opt in
    p | --print)
      #
      ls -d $DIR/*.md \
        | sort -h -r \
        | head -n $PRINT_LAST_LOGS \
        | while read log; do cat $log; echo''; done
      exit;
      ;;
    h | -help)
      showhelp
      exit
      ;;
    m | --message)
      #
      message="${OPTARG}"
      ;;
    \?)
      usage >&2
      exit 1
      ;;
  esac
done

if [[ ! -f $LOG ]]; then

  echo $(date +'# %A, %B %d, %Y') > $LOG
  echo "" >> $LOG

fi


if [[ ! -z $message ]]; then
  echo "-  $message" >> $LOG
  cat $LOG
  exit
fi

echo "-  " >> $LOG

if [[ $EDITOR =~ "vim" ]]; then

  vim "+normal G$" +startinsert $LOG

elif [[ $EDITOR =~ "emacs" ]]; then

  emacs $LOG --eval "(goto-char (point-max))"
else

  open $LOG
fi
